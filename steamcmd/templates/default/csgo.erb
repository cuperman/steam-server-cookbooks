#!/bin/sh
#
# Source Dedicated Server Init Script
#
# chkconfig: 345 99 01
# description: some startup script
#

# Server options
TITLE='Source Dedicated Server'   # Script initialization title
LONGNAME='Counter-Strike: GO'     # Full title of game type
NAME='csgo'                       # Server handle for the screen session
DAEMON='srcds_run'                # The server daemon
STEAM='/opt/steamcmd/apps/csgo'   # STEAM to Steam installation
USER='steam'

# Game options
IP='0.0.0.0'                      # IP of the server
PORT='27015'                      # Port number to
MAP='de_dust2'                    # Initial map to start
GAME='csgo'                       # Game type (tf|cstrike|valve|hl2mp|csgo)
SIZE='24'                         # Maximum number of players

# Server options string
OPTS="-game $GAME +hostname \"$CLIENT\" +map $MAP +ip $IP -port $PORT \
    -autoupdate +maxplayers $SIZE -pidfile $STEAM/$GAME/$NAME.pid"

# Screen command
INTERFACE="/usr/bin/screen -A -m -d -S $NAME"

service_start() {
    # Check if the pid files currently exist
    if [ ! -f $STEAM/$GAME/$NAME-screen.pid ]; then
        if [ -x $STEAM/$DAEMON ]; then
            echo "Starting $TITLE - $LONGNAME"
            echo "Server IP: $IP"
            echo "Server port: $PORT"
            echo "Server size: $SIZE players"
            cd $STEAM
            $INTERFACE $STEAM/$DAEMON $OPTS
            # Prevent race condition on SMP kernels
            sleep 1
            # Find and write current process id of the screen process
            ps -ef | grep SCREEN | grep "$NAME" | grep -v grep | awk '{ print $2 }' > $STEAM/$GAME/$NAME-screen.pid
            echo "$TITLE screen process ID written to $STEAM/$GAME/$NAME-screen.pid"
            echo "$TITLE server process ID written to $STEAM/$GAME/$NAME.pid"

            echo "$TITLE started."
        fi
    else
        echo -e "Cannot start $TITLE.  Server is already running."
    fi
}

service_stop() {
    if [ -f $STEAM/$GAME/$NAME-screen.pid ]; then
        echo "Stopping $TITLE - $LONGNAME."
        # Get the process ID from the pid file we created earlier
        for id in `cat $STEAM/$GAME/$NAME-screen.pid`
            do kill -9 $id
            echo "Killing process ID $id"
            echo "Removing $TITLE screen pid file"
            rm -rf $STEAM/$GAME/$NAME-screen.pid
            break
        done
        # Remove server pid file
        echo "Removing $TITLE pid file"
        rm -rf $STEAM/$GAME/$NAME.pid
        # Wipe all old screen sessions
        screen -wipe 1> /dev/null 2> /dev/null
        echo "$TITLE stopped."
    else
        echo -e "Cannot stop $TITLE.  Server is not running."
    fi
}

service_status() {
    if [ -f $STEAM/$GAME/$NAME-screen.pid ]; then
        if ps -ef | grep SCREEN | grep "$NAME" | grep -v grep; then
            echo "Server is running"
            exit 0
        else
            echo "Server is dead and pid file exists"
            exit 1
        fi
    else
        echo "Server is not running"
        exit 3
    fi
}

case "$1" in
    'start')
        service_start
        ;;
    'stop')
        service_stop
        ;;
    'restart')
        service_stop
        sleep 1
        service_start
        ;;
    'status')
        service_status
        ;;
    *)
        echo "Usage $0 start|stop|restart|status"
esac