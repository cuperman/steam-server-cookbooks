#!/bin/sh
#
# Source Dedicated Server Init Script
#
# chkconfig: 345 99 01
# description: some startup script
#

# Screen command
INTERFACE="/usr/bin/screen -A -m -d -S <%= @name %>"

# Server options string
OPTS="-game <%= @game %> +map <%= @map %> +ip <%= @ip %> -port <%= @port %> +maxplayers <%= @maxplayers %> -pidfile <%= @pidfile %>"

service_start() {
    # Check if the pid files currently exist
    if [ ! -f <%= @screenpidfile %> ]; then
        if [ -x <%= @daemon %> ]; then
            echo "Starting <%= @title %>"
            sudo -u <%= @user %> -c "$INTERFACE <%= @daemon %> $OPTS"
            # Prevent race condition on SMP kernels
            sleep 1
            # Find and write current process id of the screen process
            sudo -u <%= @user %> -c "ps -ef | grep SCREEN | grep "<%= @name %>" | grep -v grep | awk '{ print $2 }' > <%= @screenpidfile %>"
            echo "<%= @title %> screen process ID written to <%= @screenpidfile %>"
            echo "<%= @title %> server process ID written to <%= @pidfile %>"
            echo "<%= @title %> started."
        fi
    else
        echo -e "Cannot start <%= @title %>. Server is already running."
    fi
}

service_stop() {
    if [ -f <%= @screenpidfile %> ]; then
        echo "Stopping <%= @title %>."
        # Get the process ID from the pid file we created earlier
        for id in `cat <%= @screenpidfile %>`
            do kill -9 $id
            echo "Killing process ID $id"
            echo "Removing <%= @title %> screen pid file"
            rm -rf <%= @screenpidfile %>
            break
        done
        # Remove server pid file
        echo "Removing <%= @title %> pid file"
        rm -rf <%= @pidfile %>
        # Wipe all old screen sessions
        screen -wipe 1> /dev/null 2> /dev/null
        echo "<%= @title %> stopped."
    else
        echo -e "Cannot stop <%= @title %>. Server is not running."
    fi
}

service_status() {
    if [ -f <%= @screenpidfile %> ]; then
        if ps -ef | grep SCREEN | grep "<%= @name %>" | grep -v grep; then
            echo "Server is running"
            exit 0
        else
            echo "Server is dead and pid file exists"
            exit 1
        fi
    else
        echo "Server is not running"
        exit 3
    fi
}

case "$1" in
    'start')
        service_start
        ;;
    'stop')
        service_stop
        ;;
    'restart')
        service_stop
        sleep 1
        service_start
        ;;
    'status')
        service_status
        ;;
    *)
        echo "Usage $0 start|stop|restart|status"
esac